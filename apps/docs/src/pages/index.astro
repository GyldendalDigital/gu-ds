---
import Layout from "../layouts/Layout.astro";
import { Colors } from "../components/Colors";
import { Content as ColorMarkdown } from "../markdown/colors.md";
import { Borders } from "../components/Borders";
import { Sizes } from "../components/sizes/Sizes";
import { Content as BorderMarkdown } from "../markdown/borders.md";
import { Content as SizeMarkdown } from "../markdown/sizes.md";
import { AnimatedInput } from "../components/AnimatedInput";
import { TableClient, AzureNamedKeyCredential } from "@azure/data-tables";
import { Typography } from "../components/typography/Typography";
import {CategoryHeader}from "../components/categoryHeader/CategoryHeader";

const save = async (value: string) => {
  const account = import.meta.env.AZURE_ACCOUNT;
  const accountKey = import.meta.env.AZURE_KEY;
  const tableName = "dsforslag";

  const credential = new AzureNamedKeyCredential(account, accountKey);
  const client = new TableClient(
    `https://${account}.table.core.windows.net`,
    tableName,
    credential
  );

  await client.createEntity({
    partitionKey: value,
    rowKey: new Date().toISOString(),
  });
};

let forslagCookie = Astro.cookies.get("forslag")?.value ?? "";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = `${data.get("name")}`;

    if (forslagCookie !== name) {
      await save(name);

      Astro.cookies.set("forslag", name);
      forslagCookie = name;
    }
    return Astro.redirect("/");
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="Designsystem X">
  <main>
    <h1>
      <form method="post">
        Velkommen til <AnimatedInput client:load initialValue={forslagCookie} />
        {
          !forslagCookie && (
            <button class="submit-button">Send inn forslag</button>
          )
        }
        <br />
      </form>
    </h1>
    {
      forslagCookie && (
        <div class="status">
          Forslag mottatt. <a href="/forslag">Se andre forslag</a>.
        </div>
      )
    }

    <div>
      <CategoryHeader>Typography</CategoryHeader>
      <Typography />
      <CategoryHeader>üìè Sizes</CategoryHeader>
      <Sizes />
      <BorderMarkdown />
      <Borders />
      <ColorMarkdown />
      <Colors client:idle />
    </div>
  </main>
</Layout>

<style>
  .status {
    text-align: center;
  }
  small {
    font-size: calc(var(--primitives-size-20) * 1px);
  }
</style>
../components/sizes/Sizes